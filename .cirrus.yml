---

# Main collection of env. vars to set for all tasks and scripts.
env:
    ####
    #### Global variables used for all tasks
    ####
    # Name of the ultimate destination branch for this CI run, PR or post-merge.
    DEST_BRANCH: "master"
    # File to update in home-dir with task-specific env. var values
    ENVLIB: ".bash_profile"
    GOPATH: "/var/tmp/go"

    # CRI-O source required for integration-testing
    CRIO_REPO: "https://github.com/cri-o/cri-o.git"
    CRIO_SLUG: "github.com/cri-o/cri-o"

    # Overrides default location (/tmp/cirrus) for repo clone (will become $SRC)
    CONMON_SLUG: "github.com/containers/conmon"
    CIRRUS_WORKING_DIR: "${GOPATH}/src/${CONMON_SLUG}"
    # Required so $ENVLIB gets loaded and /bin/sh is not used
    CIRRUS_SHELL: "/bin/bash"
    # Save a little typing (path relative to $CIRRUS_WORKING_DIR)
    SCRIPT_BASE: "./contrib/cirrus"
    # Spoof travis, some legacy scripts check for this value instead of $CI
    TRAVIS: "true"

    ####
    #### Cache-image names to test with
    ####
    # GCE project where images live
    IMAGE_PROJECT: "libpod-218412"
    # See https://github.com/containers/libpod/blob/master/contrib/cirrus/README.md#test_build_cache_images_task-task
    _BUILT_IMAGE_SUFFIX: "libpod-6524542501781504"
    FEDORA_CACHE_IMAGE_NAME: "fedora-32-${_BUILT_IMAGE_SUFFIX}"
    PRIOR_FEDORA_CACHE_IMAGE_NAME: "fedora-31-${_BUILT_IMAGE_SUFFIX}"
    UBUNTU_CACHE_IMAGE_NAME: "ubuntu-20-${_BUILT_IMAGE_SUFFIX}"
    PRIOR_UBUNTU_CACHE_IMAGE_NAME: "ubuntu-19-${_BUILT_IMAGE_SUFFIX}"
    FEDORA_CONTAINER_FQIN: 'registry.fedoraproject.org/fedora:32'
    PRIOR_FEDORA_CONTAINER_FQIN: 'registry.fedoraproject.org/fedora:31'

# Default timeout for each task (hard-max is 2-hours)
timeout_in: 60m

gcp_credentials: ENCRYPTED[13e51806369f650e6ccc326338deeb3c24052fc0a7be29beef2b96da551aed3200abbb6c6406a936bb4388fb2758405c]

# Default compute settings unless overridden within tasks (below)
gce_instance:
    image_project: "${IMAGE_PROJECT}"
    zone: "us-central1-f"
    cpu: 4
    memory: "16Gb"
    disk: 200  # MANDATORY 200GB for obscure less-documented performance reasons
    image_name: "${FEDORA_CACHE_IMAGE_NAME}"


# Update metadata on VM images referenced by this repository state
# N/B: This is a _CRITICAL_ task, VM Image timestamps indicate which are
# candidates for inactivity-pruning.  It is assumed to run execute periodically.
meta_task:

    # see bors.toml
    skip: $CIRRUS_BRANCH =~ ".*\.tmp"

    container:
        image: "quay.io/libpod/imgts:latest"  # from libpod repo.
        cpu: 1
        memory: 1

    env:
        # Space-separated list of images used by this repository state
        IMGNAMES: |-
            ${FEDORA_CACHE_IMAGE_NAME}
            ${PRIOR_FEDORA_CACHE_IMAGE_NAME}
            ${UBUNTU_CACHE_IMAGE_NAME}
            ${PRIOR_UBUNTU_CACHE_IMAGE_NAME}
        BUILDID: "${CIRRUS_BUILD_ID}"
        REPOREF: "${CIRRUS_CHANGE_IN_REPO}"
        GCPJSON: ENCRYPTED[08de2c74178470b1bc85a107e9962f06dbd11d33c7adf024d3e48ae4399ca5383f9d3ad0e2fd65c3ce12750dd6ef8803]
        GCPNAME: ENCRYPTED[561ce33a9357e5b8e3fb54739c3af31730c0c3b736792f16a67026a8544379d83ff3c27d6fea1c7797a6ae49b6e58115]
        GCPPROJECT: ENCRYPTED[1992c55f028f9a0d03f01f84d173425a222ad52bcecdc97d29bc99bd36152fadadd2bad7f79498307b2ce85409fb4bc8]
        CIRRUS_CLONE_DEPTH: 1  # source not used

    # Source not used
    clone_script: mkdir -p '${CIRRUS_WORKING_DIR}'

    script: '/usr/local/bin/entrypoint.sh'


# Verify calls to bin/config were saved
config_task:

    # Runs within Cirrus's "community cluster"
    container:
        image: "${FEDORA_CONTAINER_FQIN}"
        cpu: 4
        memory: 12

    script:
        - dnf install -y make glib2-devel git gcc golang
        - cd $CIRRUS_WORKING_DIR
        - GO111MODULE=on go mod init github.com/containers/conmon
        - make config
        - ./hack/tree_status.sh


# Verify code was fmt'ed properly
fmt_task:

    # Runs within Cirrus's "community cluster"
    container:
        image: "${FEDORA_CONTAINER_FQIN}"
        cpu: 4
        memory: 12

    script:
        - dnf install -y make glib2-devel git gcc rpm-build clang golang
        - cd $CIRRUS_WORKING_DIR
        - make fmt
        - ./hack/tree_status.sh


# Build the static binary
static_binary_task:
    depends_on:
        - 'config'
        - 'fmt'

    script:
        - dnf install -y podman make git gcc
        - make containerized


# Verify conmon package can be built and installed on Fedora
fedora_packaging_task:

    # Runs within Cirrus's "community cluster"
    container:
        matrix:
            image: "${FEDORA_CONTAINER_FQIN}"
            image: "${PRIOR_FEDORA_CONTAINER_FQIN}"
        cpu: 4
        memory: 12

    script:
        - dnf install -y make glib2-devel git gcc rpm-build
        - cd $CIRRUS_WORKING_DIR
        - make
        - make -f .rpmbuild/Makefile
        - rpmbuild --rebuild conmon-*.src.rpm
        - dnf -y install ~/rpmbuild/RPMS/x86_64/conmon*.x86_64.rpm
        - ls -l /usr/bin/conmon

    timeout_in: '20m'


# this task runs the conmon integration tests
integration_task:

    depends_on:
        - 'static_binary'
        - 'config'
        - 'fmt'

    gce_instance:
        matrix:
            # Images are generated separately, from build_images_task (below)
            image_name: "${FEDORA_CACHE_IMAGE_NAME}"

    setup_environment_script: '$SCRIPT_BASE/setup_environment.sh'
    integration_test_script: '$SCRIPT_BASE/integration_test.sh'


cri-o_integration_task:

    depends_on:
        - 'static_binary'
        - 'config'
        - 'fmt'

    env:
        matrix:
            TEST_USERNS: 0
            TEST_USERNS: 1

    setup_environment_script: '$SCRIPT_BASE/setup_environment.sh'
    integration_test_script: '$SCRIPT_BASE/cri-o_test.sh'


# Overall success/failure represented by quantity AND status of dependent task
# i.e. All required dependent tasks _MUST_ be listed here
success_task:

    depends_on:
        - 'config'
        - 'fmt'
        - 'static_binary'
        - 'fedora_packaging'
        - 'integration'
        - 'cri-o_integration'

    container:
        image: "${FEDORA_CONTAINER_FQIN}"
        cpu: 1
        memory: 1

    script: '/bin/true'
